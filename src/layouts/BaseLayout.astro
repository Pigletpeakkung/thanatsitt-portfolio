---
// üåô Base Layout - Enhanced for Alchemical Portfolio with Stars Integration
export interface Props {
  title?: string;
  description?: string;
  image?: string;
  canonical?: string;
  starsConfig?: {
    intensity?: 'subtle' | 'normal' | 'cosmic';
    nebulaColor?: 'purple' | 'alchemy' | 'mirror' | 'flow';
    enabled?: boolean;
  };
}

const {
  title = 'Mirror of Inner Alchemy | Thanatsitt Portfolio',
  description = 'Portfolio of Thanatsitt Santisamranwilai - Fusing design, code, and Jungian-inspired thought',
  image = '/images/og-image.jpg',
  canonical = Astro.url.href,
  starsConfig = { intensity: 'normal', nebulaColor: 'mirror', enabled: true }
} = Astro.props;

const siteTitle = 'Thanatsitt Portfolio';
const fullTitle = title === siteTitle ? title : `${title} | ${siteTitle}`;
---

<!DOCTYPE html>
<html lang="en" class="scroll-smooth">
  <head>
    <!-- üéØ Meta Essentials -->
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="generator" content={Astro.generator} />

    <!-- üìÑ Page Info -->
    <title>{fullTitle}</title>
    <meta name="description" content={description} />
    <link rel="canonical" href={canonical} />

    <!-- üé® Favicons -->
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="icon" type="image/png" href="/favicon.png" />
    <link rel="icon" href="/favicon.ico" />

    <!-- üåê Open Graph -->
    <meta property="og:type" content="website" />
    <meta property="og:title" content={fullTitle} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={new URL(image, Astro.url)} />
    <meta property="og:url" content={canonical} />
    <meta property="og:locale" content="en_US" />

    <!-- üê¶ Twitter Card -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={fullTitle} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={new URL(image, Astro.url)} />
    <meta name="twitter:creator" content="@ThanattsittS" />

    <!-- üé® Theme Colors -->
    <meta name="theme-color" content="#334155" />
    <meta name="msapplication-TileColor" content="#334155" />

    <!-- üì± PWA -->
    <link rel="manifest" href="/manifest.json" />

    <!-- üî§ Fonts - Optimized Loading -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=Playfair+Display:wght@400;500;600;700&display=swap"
      rel="stylesheet"
    />

    <!-- üé® Enhanced Global Styles -->
    <style>
      /* üåô CSS Custom Properties - Alchemical Palette */
      :root {
        /* Luna Palette - Primary Grays */
        --color-luna-50: #f8fafc;
        --color-luna-100: #f1f5f9;
        --color-luna-200: #e2e8f0;
        --color-luna-300: #cbd5e1;
        --color-luna-400: #94a3b8;
        --color-luna-500: #64748b;
        --color-luna-600: #475569;
        --color-luna-700: #334155;
        --color-luna-800: #1e293b;
        --color-luna-900: #0f172a;
        --color-luna-950: #020617;
        
        /* Alchemy Palette - Transformation Gold */
        --color-alchemy-50: #fffbeb;
        --color-alchemy-100: #fef3c7;
        --color-alchemy-200: #fde68a;
        --color-alchemy-300: #fcd34d;
        --color-alchemy-400: #fbbf24;
        --color-alchemy-500: #f59e0b;
        --color-alchemy-600: #d97706;
        --color-alchemy-700: #b45309;
        --color-alchemy-800: #92400e;
        --color-alchemy-900: #78350f;
        
        /* Mirror Palette - Reflection Purple */
        --color-mirror-50: #faf5ff;
        --color-mirror-100: #f3e8ff;
        --color-mirror-200: #e9d5ff;
        --color-mirror-300: #d8b4fe;
        --color-mirror-400: #c084fc;
        --color-mirror-500: #a855f7;
        --color-mirror-600: #9333ea;
        --color-mirror-700: #7c3aed;
        --color-mirror-800: #6b21a8;
        --color-mirror-900: #581c87;
        
        /* Flow Palette - Communication Blue */
        --color-flow-50: #eff6ff;
        --color-flow-100: #dbeafe;
        --color-flow-200: #bfdbfe;
        --color-flow-300: #93c5fd;
        --color-flow-400: #60a5fa;
        --color-flow-500: #3b82f6;
        --color-flow-600: #2563eb;
        --color-flow-700: #1d4ed8;
        --color-flow-800: #1e40af;
        --color-flow-900: #1e3a8a;
        
        /* Sage Palette - Wisdom Green */
        --color-sage-50: #f0fdf4;
        --color-sage-100: #dcfce7;
        --color-sage-200: #bbf7d0;
        --color-sage-300: #86efac;
        --color-sage-400: #4ade80;
        --color-sage-500: #22c55e;
        --color-sage-600: #16a34a;
        --color-sage-700: #15803d;
        --color-sage-800: #166534;
        --color-sage-900: #14532d;
        
        /* Typography */
        --font-display: 'Inter', system-ui, sans-serif;
        --font-heading: 'Playfair Display', Georgia, serif;
        --font-mono: 'JetBrains Mono', monospace;
        
        /* Glass Effects - Enhanced */
        --glass-bg: rgba(255, 255, 255, 0.1);
        --glass-border: rgba(255, 255, 255, 0.2);
        --glass-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        --glass-blur: 16px;
        
        /* Animations */
        --transition-fast: 150ms ease;
        --transition-normal: 300ms ease;
        --transition-slow: 500ms ease;
        --transition-cosmic: 800ms cubic-bezier(0.4, 0, 0.2, 1);
        
        /* Z-Index Scale */
        --z-background: -10;
        --z-stars: -5;
        --z-content: 10;
        --z-overlay: 20;
        --z-modal: 50;
      }

      /* üåô Dark Mode Variables */
      @media (prefers-color-scheme: dark) {
        :root {
          --glass-bg: rgba(0, 0, 0, 0.2);
          --glass-border: rgba(255, 255, 255, 0.1);
          --glass-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
        }
      }

      /* üéØ Base Styles */
      html {
        font-family: var(--font-display);
        scroll-behavior: smooth;
        scroll-padding-top: 2rem;
      }

      body {
        margin: 0;
        padding: 0;
        background: var(--color-luna-50);
        color: var(--color-luna-900);
        line-height: 1.6;
        transition: background-color var(--transition-normal), color var(--transition-normal);
        overflow-x: hidden;
        position: relative;
      }

      /* üåô Dark Mode */
      @media (prefers-color-scheme: dark) {
        body {
          background: var(--color-luna-900);
          color: var(--color-luna-50);
        }
      }

      /* üìù Typography */
      h1, h2, h3, h4, h5, h6 {
        font-family: var(--font-heading);
        font-weight: 600;
        line-height: 1.2;
        margin: 0;
      }

      /* üåü Enhanced Glass Morphism Classes */
      .glass {
        background: var(--glass-bg);
        backdrop-filter: blur(var(--glass-blur));
        -webkit-backdrop-filter: blur(var(--glass-blur));
        border: 1px solid var(--glass-border);
        box-shadow: var(--glass-shadow);
        transition: all var(--transition-normal);
      }

      .glass-luna {
        background: rgba(100, 116, 139, 0.1);
        backdrop-filter: blur(12px);
        -webkit-backdrop-filter: blur(12px);
        border: 1px solid rgba(100, 116, 139, 0.2);
        box-shadow: 0 8px 32px rgba(100, 116, 139, 0.1);
      }

      .glass-alchemy {
        background: rgba(251, 191, 36, 0.1);
        backdrop-filter: blur(12px);
        -webkit-backdrop-filter: blur(12px);
        border: 1px solid rgba(251, 191, 36, 0.2);
        box-shadow: 0 8px 32px rgba(251, 191, 36, 0.1);
      }

      .glass-mirror {
        background: rgba(168, 85, 247, 0.1);
        backdrop-filter: blur(12px);
        -webkit-backdrop-filter: blur(12px);
        border: 1px solid rgba(168, 85, 247, 0.2);
        box-shadow: 0 8px 32px rgba(168, 85, 247, 0.1);
      }

      .glass-flow {
        background: rgba(59, 130, 246, 0.1);
        backdrop-filter: blur(12px);
        -webkit-backdrop-filter: blur(12px);
        border: 1px solid rgba(59, 130, 246, 0.2);
        box-shadow: 0 8px 32px rgba(59, 130, 246, 0.1);
      }

      .glass-sage {
        background: rgba(34, 197, 94, 0.1);
        backdrop-filter: blur(12px);
        -webkit-backdrop-filter: blur(12px);
        border: 1px solid rgba(34, 197, 94, 0.2);
        box-shadow: 0 8px 32px rgba(34, 197, 94, 0.1);
      }

      /* üé® Enhanced Text Gradients */
      .text-gradient-alchemy {
        background: linear-gradient(135deg, var(--color-alchemy-400), var(--color-alchemy-600));
        background-clip: text;
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        color: transparent;
      }

      .text-gradient-mirror {
        background: linear-gradient(135deg, var(--color-mirror-400), var(--color-mirror-600));
        background-clip: text;
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        color: transparent;
      }

      .text-gradient-flow {
        background: linear-gradient(135deg, var(--color-flow-400), var(--color-flow-600));
        background-clip: text;
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        color: transparent;
      }

      .text-gradient-sage {
        background: linear-gradient(135deg, var(--color-sage-400), var(--color-sage-600));
        background-clip: text;
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        color: transparent;
      }

      /* üåå Cosmic Background Patterns (Fallback) */
      .cosmic-bg {
        background-image: 
          radial-gradient(circle at 20% 50%, rgba(168, 85, 247, 0.15) 0%, transparent 50%),
          radial-gradient(circle at 80% 20%, rgba(251, 191, 36, 0.15) 0%, transparent 50%),
          radial-gradient(circle at 40% 80%, rgba(100, 116, 139, 0.1) 0%, transparent 50%);
      }

      /* üé≠ Enhanced Animation Classes */
      .animate-float {
        animation: float 6s ease-in-out infinite;
      }

      .animate-glow {
        animation: glow 2s ease-in-out infinite alternate;
      }

      .animate-shimmer {
        animation: shimmer 3s ease-in-out infinite;
      }

      @keyframes float {
        0%, 100% { transform: translateY(0px); }
        50% { transform: translateY(-20px); }
      }

      @keyframes glow {
        from { box-shadow: 0 0 20px rgba(168, 85, 247, 0.3); }
        to { box-shadow: 0 0 30px rgba(168, 85, 247, 0.6); }
      }

      @keyframes shimmer {
        0% { background-position: -200% 0; }
        100% { background-position: 200% 0; }
      }

      /* üîÆ Container Classes */
      .container-sm { max-width: 640px; margin: 0 auto; padding: 0 1rem; }
      .container-md { max-width: 768px; margin: 0 auto; padding: 0 1rem; }
      .container-lg { max-width: 1024px; margin: 0 auto; padding: 0 1rem; }
      .container-xl { max-width: 1280px; margin: 0 auto; padding: 0 1rem; }

      /* üé® Card Classes */
      .card {
        background: var(--glass-bg);
        backdrop-filter: blur(var(--glass-blur));
        border: 1px solid var(--glass-border);
        border-radius: 1rem;
        padding: 1.5rem;
        transition: all var(--transition-normal);
      }

      .card-hover:hover {
        transform: translateY(-4px);
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
      }

      .card-ritual {
        background: linear-gradient(135deg, var(--glass-bg), rgba(168, 85, 247, 0.05));
        border: 1px solid rgba(168, 85, 247, 0.2);
      }

      /* ‚ôø Accessibility */
      @media (prefers-reduced-motion: reduce) {
        *,
        *::before,
        *::after {
          animation-duration: 0.01ms !important;
          animation-iteration-count: 1 !important;
          transition-duration: 0.01ms !important;
        }
        
        html {
          scroll-behavior: auto;
        }
      }

      /* üì± Responsive Typography */
      @media (max-width: 640px) {
        html { font-size: 14px; }
        .container-sm, .container-md, .container-lg, .container-xl {
          padding: 0 0.75rem;
        }
      }
      @media (min-width: 1024px) {
        html { font-size: 16px; }
      }
      @media (min-width: 1536px) {
        html { font-size: 18px; }
      }

      /* üåü Focus States */
      *:focus-visible {
        outline: 2px solid var(--color-alchemy-500);
        outline-offset: 2px;
      }
    </style>

    <!-- üé≠ GSAP Animation Library -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/gsap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/ScrollTrigger.min.js"></script>
  </head>

  <body class="min-h-screen bg-luna-50 dark:bg-luna-900 text-luna-900 dark:text-luna-50 transition-colors duration-300">
    <!-- üåå Stars Background (Conditional) -->
    {starsConfig.enabled && (
      <div id="stars-container" class="fixed inset-0 pointer-events-none" style="z-index: var(--z-stars);">
        <!-- Stars component will be injected here -->
      </div>
    )}

    <!-- üåü Main Content -->
    <main id="main-content" class="relative" style="z-index: var(--z-content);">
      <slot />
    </main>

    <!-- üé® Fallback Background (when stars disabled) -->
    {!starsConfig.enabled && (
      <div id="fallback-background" class="fixed inset-0 pointer-events-none cosmic-bg" style="z-index: var(--z-background);"></div>
    )}

    <!-- üìú Enhanced Scripts -->
    <script define:vars={{ starsConfig }}>
      // üåô Enhanced Theme Detection
      function initializeTheme() {
        if (
          localStorage.theme === 'dark' ||
          (!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)
        ) {
          document.documentElement.classList.add('dark');
          document.documentElement.setAttribute('data-theme', 'dark');
        } else {
          document.documentElement.classList.remove('dark');
          document.documentElement.setAttribute('data-theme', 'light');
        }
      }

      // üéØ Initialize on load
      initializeTheme();

      // üîÑ Listen for system theme changes
      window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', initializeTheme);

      // ‚ú® Smooth Scroll Polyfill
      if (!('scrollBehavior' in document.documentElement.style)) {
        import('https://cdn.skypack.dev/smooth-scroll').then((module) => {
          const scroll = new module.default('a[href*="#"]', {
            speed: 500,
            speedAsDuration: true,
          });
        });
      }

      // üåü Initialize GSAP
      if (typeof gsap !== 'undefined') {
        gsap.registerPlugin(ScrollTrigger);
        
        // üé≠ Global GSAP defaults
        gsap.defaults({
          duration: 1,
          ease: "power2.out"
        });

        // üîÆ Enhanced scroll animations
        gsap.utils.toArray('.card-hover').forEach(card => {
          gsap.fromTo(card, 
            { y: 50, opacity: 0 },
            {
              y: 0,
              opacity: 1,
              duration: 0.8,
              scrollTrigger: {
                trigger: card,
                start: "top 80%",
                end: "bottom 20%",
                toggleActions: "play none none reverse"
              }
            }
          );
        });

        // üåü Glass element animations
        gsap.utils.toArray('.glass').forEach(glass => {
          gsap.fromTo(glass,
            { scale: 0.95, opacity: 0 },
            {
              scale: 1,
              opacity: 1,
              duration: 1,
              scrollTrigger: {
                trigger: glass,
                start: "top 85%",
                toggleActions: "play none none reverse"
              }
            }
          );
        });
      }

      // üéØ Performance optimization
      document.addEventListener('DOMContentLoaded', () => {
        // üñºÔ∏è Lazy load images
        if ('IntersectionObserver' in window) {
          const imageObserver = new IntersectionObserver((entries, observer) => {
            entries.forEach(entry => {
              if (entry.isIntersecting) {
                const img = entry.target;
                if (img.dataset.src) {
                  img.src = img.dataset.src;
                  img.classList.remove('lazy');
                  imageObserver.unobserve(img);
                }
              }
            });
          });

          document.querySelectorAll('img[data-src]').forEach(img => {
            imageObserver.observe(img);
          });
        }

        // üåü Initialize stars configuration
        if (starsConfig.enabled) {
          document.documentElement.style.setProperty('--stars-enabled', 'true');
        }

        // üé≠ Add loaded class for animations
        document.body.classList.add('loaded');
      });

      // üîß Utility functions
      window.AlchemyUtils = {
        // üé® Theme toggle
        toggleTheme() {
          const isDark = document.documentElement.classList.contains('dark');
          if (isDark) {
            document.documentElement.classList.remove('dark');
            localStorage.theme = 'light';
          } else {
            document.documentElement.classList.add('dark');
            localStorage.theme = 'dark';
          }
        },

        // üåü Animate element
        animateElement(selector, animation = {}) {
          if (typeof gsap !== 'undefined') {
            gsap.to(selector, animation);
          }
        },

        // üîÆ Create glass effect
        addGlassEffect(element, variant = 'default') {
          element.classList.add('glass');
          if (variant !== 'default') {
            element.classList.add(`glass-${variant}`);
          }
        }
      };
    </script>
  </body>
</html>
